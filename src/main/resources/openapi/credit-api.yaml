openapi: 3.0.3
info:
  title: Credit Service API
  version: 1.0.0
  description: API para gestionar productos de cr√©dito
  contact:
    name: Giomar Limo
  license:
    name: Apache 2.0
servers:
  - url: http://localhost:8083/bank/v1
tags:
  - name: credit-api
    description: Operations related to credit products

paths:
  /credits:
    get:
      tags:
        - credit-api
      summary: Get all credits
      operationId: getAll
      parameters:
        - name: customerId
          in: query
          required: false
          schema:
            type: string
          description: Filter by customer ID
        - name: creditType
          in: query
          required: false
          schema:
            type: string
            enum: [PRESTAMO_PERSONAL, PRESTAMO_EMPRESARIAL, TARJETA_CREDITO, TARJETA_DEBITO]
          description: Filter by credit type
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreditResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - credit-api
      summary: Create credit product
      operationId: create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditRequest'
        description: Credit data to create
      responses:
        '201':
          description: Credit created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          description: Business rule violation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /credits/{id}:
    get:
      tags:
        - credit-api
      summary: Get credit by ID
      operationId: getById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Credit ID
          example: "507f1f77bcf86cd799439011"
      responses:
        '200':
          description: Credit found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - credit-api
      summary: Update credit
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Credit ID
          example: "507f1f77bcf86cd799439011"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditRequest'
        description: Credit data to update
      responses:
        '200':
          description: Credit updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - credit-api
      summary: Delete credit
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Credit ID
          example: "507f1f77bcf86cd799439011"
      responses:
        '204':
          description: Credit deleted successfully
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /credits/{id}/balance:
    get:
      tags:
        - credit-api
      summary: Get credit balance
      operationId: getCreditBalance
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Credit ID
          example: "507f1f77bcf86cd799439011"
      responses:
        '200':
          description: Balance retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditBalanceResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /credits/customer/{customerId}:
    get:
      tags:
        - credit-api
      summary: Get credits by customer ID
      operationId: getCreditsByCustomer
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
          description: Customer ID
          example: "507f1f77bcf86cd799439011"
        - name: creditType
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/CreditTypeEnum'
          description: Filter by credit type
          example: PRESTAMO_PERSONAL
      responses:
        '200':
          description: Credits found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreditResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /credits/{id}/payment:
    post:
      tags:
        - credit-api
      summary: Make a credit payment
      operationId: makePayment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Credit ID
          example: "507f1f77bcf86cd799439011"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
        description: Payment information
      responses:
        '200':
          description: Payment processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Payment exceeds outstanding balance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /credits/{id}/consumption:
    post:
      tags:
        - credit-api
      summary: Charge consumption to credit card
      operationId: chargeConsumption
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Credit Card ID
          example: "507f1f77bcf86cd799439011"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumptionRequest'
        description: Consumption information
      responses:
        '200':
          description: Consumption charged successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Consumption exceeds available credit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /credits/customer/{customerId}/daily-balances:
    get:
      tags:
        - credit-api
      summary: Get customer credits with daily balances for current month
      operationId: getCustomerCreditsWithDailyBalances
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
          description: Customer ID
          example: "507f1f77bcf86cd799439011"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreditDailyBalance'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /credits/customer/{customerId}/has-overdue:
    get:
      tags:
        - credit-api
      summary: Check if customer has any overdue credits
      operationId: hasOverdueCredits
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
          description: Customer ID
          example: "507f1f77bcf86cd799439011"
      responses:
        '200':
          description: Check completed successfully
          content:
            application/json:
              schema:
                type: boolean
                example: true
        '500':
          $ref: '#/components/responses/InternalServerError'

  /credits/{creditId}/third-party-payment:
    post:
      tags:
        - credit-api
      summary: Make a payment for a credit product from a third party customer
      operationId: makeThirdPartyPayment
      parameters:
        - name: creditId
          in: path
          required: true
          schema:
            type: string
          description: Credit ID
          example: "68fc3c992b86de614b930f61"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThirdPartyPaymentRequest'
      responses:
        '200':
          description: Third party payment processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Payment exceeds outstanding balance or validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /credits/{cardId}/main-account-balance:
    get:
      tags:
        - credit-api
      summary: Get main account balance for debit card
      operationId: getDebitCardMainAccountBalance
      parameters:
        - name: cardId
          in: path
          required: true
          schema:
            type: string
          description: Debit Card ID
          example: "507f1f77bcf86cd799439022"
      responses:
        '200':
          description: Main account balance retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebitCardMainAccountBalanceResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '400':
          description: Product is not a debit card or has no main account
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    CreditRequest:
      type: object
      required:
        - creditNumber
        - creditType
        - customerId
        - amount
        - interestRate
        - dueDate
      properties:
        creditNumber:
          type: string
          description: N√∫mero √∫nico del producto de cr√©dito
          example: "CRD202400000001"
          minLength: 10
          maxLength: 20
        creditType:
          $ref: '#/components/schemas/CreditTypeEnum'
        customerId:
          type: string
          description: ID del cliente titular
          example: "507f1f77bcf86cd799439011"
        amount:
          type: number
          format: double
          minimum: 0
          description: Monto total del cr√©dito
          example: 10000.00
        interestRate:
          type: number
          format: double
          minimum: 0
          maximum: 100
          description: Tasa de inter√©s anual
          example: 15.5
        creditLimit:
          type: number
          format: double
          minimum: 0
          description: L√≠mite de cr√©dito (para tarjetas de cr√©dito)
          example: 5000.00
        termMonths:
          type: integer
          minimum: 1
          description: Plazo en meses (para pr√©stamos)
          example: 36
        monthlyPayment:
          type: number
          format: double
          minimum: 0
          description: Pago mensual calculado
          example: 350.75
        dueDate:
          type: string
          format: date
          description: Fecha de vencimiento del primer pago
          example: "2024-12-31"
        mainAccountId:
          type: string
          description: ID de la cuenta principal asociada (solo para tarjetas de d√©bito)
          example: "507f1f77bcf86cd799439011"
        associatedAccounts:
          type: array
          description: Cuentas asociadas con orden expl√≠cito
          items:
            type: object
            required:
              - accountId
              - sequenceOrder
            properties:
              accountId:
                type: string
                example: "68fd8169bd0ed50120de03dc"
              sequenceOrder:
                type: integer
                minimum: 1
                description: Orden de prioridad (1 = primera, 2 = segunda, etc.)
                example: 1
        dailyWithdrawalLimit:
          type: number
          format: double
          minimum: 0
          description: L√≠mite diario para retiros (solo para tarjetas de d√©bito)
          example: 1000.00
        dailyPurchaseLimit:
          type: number
          format: double
          minimum: 0
          description: L√≠mite diario para compras (solo para tarjetas de d√©bito)
          example: 5000.00
        cardBrand:
          type: string
          description: Marca de la tarjeta (OBLIGATORIO para tarjetas de d√©bito)
          enum: [ VISA, MASTERCARD ]
          example: "VISA"

    CreditResponse:
      type: object
      description: Datos de respuesta de cr√©dito
      properties:
        id:
          type: string
          description: Identificador √∫nico
          example: "507f1f77bcf86cd799439011"
        creditNumber:
          type: string
          description: N√∫mero del producto de cr√©dito
          example: "CRD202400000001"
        creditType:
          $ref: '#/components/schemas/CreditTypeEnum'
        customerId:
          type: string
          description: ID del cliente titular
          example: "507f1f77bcf86cd799439011"
        amount:
          type: number
          format: double
          description: Monto total del cr√©dito
          example: 10000.00
        outstandingBalance:
          type: number
          format: double
          description: Saldo pendiente
          example: 8500.50
        interestRate:
          type: number
          format: double
          description: Tasa de inter√©s anual
          example: 15.5
        creditLimit:
          type: number
          format: double
          description: L√≠mite de cr√©dito
          example: 5000.00
        availableCredit:
          type: number
          format: double
          description: Cr√©dito disponible (para tarjetas)
          example: 2500.00
        termMonths:
          type: integer
          description: Plazo en meses
          example: 36
        monthlyPayment:
          type: number
          format: double
          description: Pago mensual
          example: 350.75
        remainingPayments:
          type: integer
          description: N√∫mero de pagos restantes
          example: 24
        status:
          $ref: '#/components/schemas/CreditStatusEnum'
        createdAt:
          type: string
          format: date-time
          description: Fecha y hora de creaci√≥n
          example: "2024-01-15T10:30:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Fecha y hora de √∫ltima actualizaci√≥n
          example: "2024-01-15T10:30:00Z"
        dueDate:
          type: string
          format: date
          description: Fecha de vencimiento actual
          example: "2024-12-31"
        mainAccountId:
          type: string
          description: ID de la cuenta principal asociada
          example: "507f1f77bcf86cd799439011"
        associatedAccounts:
          type: array
          items:
            type: object
            properties:
              accountId:
                type: string
                example: "68fd8169bd0ed50120de03dc"
              sequenceOrder:
                type: integer
                example: 1
              associatedAt:
                type: string
                format: date-time
                example: "2024-01-15T10:30:00Z"
              status:
                type: string
                example: "ACTIVA"
        dailyWithdrawalLimit:
          type: number
          format: double
          description: L√≠mite diario para retiros
          example: 1000.00
        dailyPurchaseLimit:
          type: number
          format: double
          description: L√≠mite diario para compras
          example: 5000.00
        expirationDate:
          type: string
          format: date
          description: Fecha de expiraci√≥n de la tarjeta
          example: "2025-12-31"

    CreditBalanceResponse:
      type: object
      description: Respuesta de saldo de cr√©dito
      properties:
        creditId:
          type: string
          description: ID del cr√©dito
          example: "507f1f77bcf86cd799439011"
        creditNumber:
          type: string
          description: N√∫mero del producto de cr√©dito
          example: "CRD202400000001"
        outstandingBalance:
          type: number
          format: double
          description: Saldo pendiente
          example: 8500.50
        availableCredit:
          type: number
          format: double
          description: Cr√©dito disponible
          example: 2500.00
        creditLimit:
          type: number
          format: double
          description: L√≠mite total de cr√©dito
          example: 5000.00
        minimumPayment:
          type: number
          format: double
          description: Pago m√≠nimo requerido
          example: 200.00
        dueDate:
          type: string
          format: date
          description: Fecha de vencimiento del pr√≥ximo pago
          example: "2024-02-15"
        currency:
          type: string
          description: C√≥digo de moneda
          example: "PEN"

    PaymentRequest:
      type: object
      description: Solicitud de pago de cr√©dito
      required:
        - amount
        - paymentDate
      properties:
        amount:
          type: number
          format: double
          minimum: 0
          description: Monto del pago
          example: 500.00
        paymentDate:
          type: string
          format: date
          description: Fecha del pago
          example: "2024-01-15"
        description:
          type: string
          description: Descripci√≥n del pago
          example: "Pago mensual programado"

    ConsumptionRequest:
      type: object
      description: Solicitud de consumo en tarjeta de cr√©dito
      required:
        - amount
        - description
      properties:
        amount:
          type: number
          format: double
          minimum: 0
          description: Monto del consumo
          example: 250.75
        description:
          type: string
          description: Descripci√≥n del consumo
          example: "Compra en supermercado"
        merchant:
          type: string
          description: Comercio donde se realiz√≥ el consumo
          example: "Supermercado XYZ"
        transactionDate:
          type: string
          format: date-time
          description: Fecha y hora de la transacci√≥n
          example: "2024-01-15T14:30:00Z"

    ErrorResponse:
      type: object
      description: Respuesta est√°ndar de error de API
      properties:
        timestamp:
          type: string
          format: date-time
          description: Marca de tiempo del error
          example: "2024-01-15T10:30:00Z"
        status:
          type: integer
          description: C√≥digo de estado HTTP
          example: 400
        error:
          type: string
          description: Tipo de error
          example: "Bad Request"
        message:
          type: string
          description: Mensaje de error
          example: "Error de validaci√≥n en los campos"
        path:
          type: string
          description: Ruta de la solicitud
          example: "/api/v1/credits"
        details:
          type: object
          description: Detalles adicionales del error
          additionalProperties:
            type: string
          example: {
            "creditNumber": "must not be blank",
            "creditType": "must not be null"
          }

    CreditTypeEnum:
      type: string
      description: Tipo de producto de cr√©dito
      enum: [ PRESTAMO_PERSONAL, PRESTAMO_EMPRESARIAL, TARJETA_CREDITO, TARJETA_DEBITO ]
      example: PRESTAMO_PERSONAL

    CreditStatusEnum:
      type: string
      description: Estado del cr√©dito
      enum: [ ACTIVO, INACTIVO, BLOQUEADO, PAGADO, MOROSO ]
      example: ACTIVO

    CreditDailyBalance:
      type: object
      properties:
        id: { type: string }
        creditNumber: { type: string }
        creditType: { $ref: '#/components/schemas/CreditTypeEnum' }
        customerId: { type: string }
        currentBalance: { type: number, format: double }
        dailyAverage: { type: number, format: double }
        dailyBalances:
          type: array
          items:
            $ref: '#/components/schemas/DailyBalance'

    DailyBalance:
      type: object
      properties:
        date:
          type: string
          format: date
          example: "2024-10-24"
        balance:
          type: number
          format: double
          example: -2500.0
        transactionsCount:
          type: integer
          example: 3

    ThirdPartyPaymentRequest:
      type: object
      required:
        - amount
        - paymentDate
        - payerCustomerId
      properties:
        amount:
          type: number
          format: double
          minimum: 0
          description: Amount of the payment
          example: 500.00
        paymentDate:
          type: string
          format: date
          description: Date of the payment
          example: "2024-01-15"
        payerCustomerId:
          type: string
          description: ID of the customer making the payment
          example: "68f9a324386cd871f5082aa1"
        description:
          type: string
          description: Description of the payment
          example: "Third party payment from family member"

    DebitCardBalanceResponse:
      type: object
      description: Respuesta de saldo de tarjeta de d√©bito
      properties:
        cardId:
          type: string
          description: ID de la tarjeta de d√©bito
          example: "507f1f77bcf86cd799439022"
        mainAccountId:
          type: string
          description: ID de la cuenta principal
          example: "507f1f77bcf86cd799439011"
        balance:
          type: number
          format: double
          description: Saldo actual de la cuenta principal
          example: 1500.50
        currency:
          type: string
          description: C√≥digo de moneda
          example: "PEN"
        lastUpdate:
          type: string
          format: date-time
          description: √öltima actualizaci√≥n de saldo
          example: "2024-01-15T10:30:00Z"

    DebitCardAccountsUpdateRequest:
      type: object
      description: Solicitud para actualizar cuentas asociadas a tarjeta de d√©bito
      properties:
        mainAccountId:
          type: string
          description: ID de la nueva cuenta principal
          example: "507f1f77bcf86cd799439011"
        associatedAccountIds:
          type: array
          description: IDs de cuentas adicionales asociadas
          items:
            type: string
          example: ["acc123", "acc456"]

    RecentCardTransactionsResponse:
      type: object
      description: Respuesta de transacciones recientes de tarjetas
      properties:
        customerId:
          type: string
          description: ID del cliente
          example: "507f1f77bcf86cd799439011"
        debitCardTransactions:
          type: array
          description: √öltimas 10 transacciones de tarjetas de d√©bito
          items:
            $ref: '#/components/schemas/CardTransaction'
        creditCardTransactions:
          type: array
          description: √öltimas 10 transacciones de tarjetas de cr√©dito
          items:
            $ref: '#/components/schemas/CardTransaction'

    CardTransaction:
      type: object
      description: Transacci√≥n de tarjeta
      properties:
        id:
          type: string
          description: ID de la transacci√≥n
          example: "txn123"
        cardId:
          type: string
          description: ID de la tarjeta
          example: "507f1f77bcf86cd799439022"
        cardType:
          type: string
          enum: [DEBITO, CREDITO]
          description: Tipo de tarjeta
          example: "DEBITO"
        amount:
          type: number
          format: double
          description: Monto de la transacci√≥n
          example: 150.75
        description:
          type: string
          description: Descripci√≥n de la transacci√≥n
          example: "Compra en supermercado"
        date:
          type: string
          format: date-time
          description: Fecha de la transacci√≥n
          example: "2024-01-15T10:30:00Z"
        merchant:
          type: string
          description: Comercio donde se realiz√≥ la transacci√≥n
          example: "Supermercado XYZ"

    DebitCardMainAccountBalanceResponse:
      type: object
      description: Respuesta de saldo de cuenta principal de tarjeta de d√©bito
      properties:
        cardId:
          type: string
          description: ID de la tarjeta de d√©bito
          example: "507f1f77bcf86cd799439022"
        cardNumber:
          type: string
          description: N√∫mero de la tarjeta de d√©bito
          example: "DEB202400000001"
        cardStatus:
          type: string
          description: Estado de la tarjeta
          example: "ACTIVA"
        mainAccountId:
          type: string
          description: ID de la cuenta principal
          example: "507f1f77bcf86cd799439011"
        accountNumber:
          type: string
          description: N√∫mero de la cuenta principal
          example: "001-123456789"
        accountType:
          type: string
          description: Tipo de cuenta
          example: "AHORRO"
        currentBalance:
          type: number
          format: double
          description: Saldo actual de la cuenta principal
          example: 1500.50
        availableBalance:
          type: number
          format: double
          description: Saldo disponible de la cuenta principal
          example: 1500.50
        currency:
          type: string
          description: C√≥digo de moneda
          example: "PEN"
        lastUpdated:
          type: string
          format: date-time
          description: √öltima actualizaci√≥n de saldo
          example: "2024-01-15T10:30:00Z"

  responses:
    BadRequest:
      description: Bad Request - Validation error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            timestamp: "2024-01-15T10:30:00Z"
            status: 400
            error: "Bad Request"
            message: "Error de validaci√≥n en los campos"
            path: "/api/v1/credits"
            details:
              creditNumber: "must not be blank"
              creditType: "must not be null"
    NotFound:
      description: Not Found - Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            timestamp: "2024-01-15T10:30:00Z"
            status: 404
            error: "Not Found"
            message: "Credit not found with id: 507f1f77bcf86cd799439011"
            path: "/api/v1/credits/507f1f77bcf86cd799439011"
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            timestamp: "2024-01-15T10:30:00Z"
            status: 500
            error: "Internal Server Error"
            message: "An unexpected error occurred"
            path: "/api/v1/credits"